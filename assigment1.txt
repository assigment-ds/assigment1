In [3]:

a = int(input("Enter the first number: "))
b = int(input("Enter the second number: "))
c = int(input("Enter the third number: "))
if (a < b) and (a < c):
  print(a, "is the minimum of the given three numbers, a.")
elif (b < a) and (b < c):
  print(b, "is the minimum of the given three numbers, b.")
else:
  print(c, "is the minimum of the given three numbers, c.")
Enter the first number: 34
Enter the second number: 56
Enter the third number: 12
12 is the minimum of the given three numbers, c.
In [8]:
x = int(input("Enter the value of first number: "))
y = int(input("Enter the value of second number: "))
def find_gcd_lcm(x, y):
  if x < y:
    small_num = x
  else:
    small_num = y
  for i in range (1, small_num+1):
    if((x%i == 0) and (y%i == 0)):
      gcd_final = i
  lcm_final = (x*y)//gcd_final
  print("GCD of the given numbers", x,"and", y, "is", gcd_final)
  print("LCM of the given numbers", x,"and", y, "is", lcm_final)
Enter the value of first number: 2
Enter the value of second number: 4

In [12]:

Number = int(input(" Please Enter any Number: "))
Sum = 0
for i in range(1, Number):
    if(Number % i == 0):
        Sum = Sum + i
if (Sum == Number):
    print(" %d is a Perfect Number" %Number)
else:
    print(" %d is not a Perfect Number" %Number)
 Please Enter any Number: 6
 6 is a Perfect Number
In [14]:
lower = 900
upper = 1000

print("Prime numbers between", lower, "and", upper, "are:")

for num in range(lower, upper + 1):
   
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)
Prime numbers between 900 and 1000 are:
907
911
919
929
937
941
947
953
967
971
977
983
991
997

In [15]:

def is_prime(n):
   for i in range(2, n):
      if n % i == 0:
         return False
   return True

def generate_twins(start, end):
   for i in range(start, end):
      j = i + 2
      if(is_prime(i) and is_prime(j)):
         print("{:d} and {:d}".format(i, j))

generate_twins(2, 100)
3 and 5
5 and 7
11 and 13
17 and 19
29 and 31
41 and 43
59 and 61
71 and 73

In [16]:

num = int(input("Enter a number: "))


sum = 0


temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** 3
   temp //= 10


if num == sum:
   print(num,"is an Armstrong number")
else:
   print(num,"is not an Armstrong number")
Enter a number: 407
407 is an Armstrong number
In [17]:
x = 5
y = 10

#x = input('Enter value of x: ')
#y = input('Enter value of y: ')

temp = x
x = y
y = temp

print('The value of x after swapping: {}'.format(x))
print('The value of y after swapping: {}'.format(y))
The value of x after swapping: 10
The value of y after swapping: 5

In [18]:

num1 = int(input('Enter First number: '))
num2 = int(input('Enter Second number '))
add = num1 + num2
dif = num1 - num2
mul = num1 * num2
div = num1 / num2
floor_div = num1 // num2
power = num1 ** num2
modulus = num1 % num2
print('Sum of ',num1 ,'and' ,num2 ,'is :',add)
print('Difference of ',num1 ,'and' ,num2 ,'is :',dif)
print('Product of' ,num1 ,'and' ,num2 ,'is :',mul)
print('Division of ',num1 ,'and' ,num2 ,'is :',div)
print('Floor Division of ',num1 ,'and' ,num2 ,'is :',floor_div)
print('Exponent of ',num1 ,'and' ,num2 ,'is :',power)
print('Modulus of ',num1 ,'and' ,num2 ,'is :',modulus)
Enter First number: 5
Enter Second number 5
Sum of  5 and 5 is : 10
Difference of  5 and 5 is : 0
Product of 5 and 5 is : 25
Division of  5 and 5 is : 1.0
Floor Division of  5 and 5 is : 1
Exponent of  5 and 5 is : 3125
Modulus of  5 and 5 is : 0
